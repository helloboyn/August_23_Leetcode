class Solution {
    int maxRob(vector<int> v) {
        int n = v.size();
        int cur, prev, prev2;
        prev2 = v[0];
        prev = max(v[0], v[1]);
        for(int i = 2; i < n; i++) {
            int pick= v[i] + prev2; 
            int notPick = prev;
            cur = max(notPick, pick);
            prev2 = prev;
            prev = cur;
        }
        return prev;
    }
public:
    int rob(vector<int>& v) {
        int n = v.size();
        if(n == 0) {
            return 0;
        }
        if(n == 1) {
            return v[0]; 
        }
        if(n == 2) {
            return max(v[0], v[1]);
        }
        vector<int> va(v.begin(), v.end() - 1);
        vector<int> vb(v.begin() + 1, v.end());
        int ans1 = maxRob(va);
        int ans2 = maxRob(vb);
        return max(ans1, ans2);
    }
};
